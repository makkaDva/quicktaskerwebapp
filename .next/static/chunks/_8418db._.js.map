{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Lenovo/Desktop/quicktaskerwebapp/lib/supabase.js"],"sourcesContent":["// Импортујте Supabase клијент\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\n// Иницијализујте Supabase клијент са env променљивима\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n)\r\n\r\n// Експортујте клијент за употребу у другим фајловима\r\nexport default supabase"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAC9B;AAIE;;AAFF,sDAAsD;AACtD,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD;uCAMb"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Lenovo/Desktop/quicktaskerwebapp/app/find-jobs/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport supabase from '@/lib/supabase';\r\n\r\ninterface Job {\r\n  id: string;\r\n  grad: string;\r\n  adresa: string;\r\n  opis: string;\r\n  dnevnica: number;\r\n  user_email: string;\r\n  broj_telefona: string; // Dodato polje za broj telefona\r\n  created_at: string;\r\n}\r\n\r\nexport default function FindJobs() {\r\n  const router = useRouter();\r\n  const [jobs, setJobs] = useState<Job[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) {\r\n        router.push('/');\r\n        return;\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from('jobs')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        console.error('Greška pri dohvatanju poslova:', error);\r\n        return;\r\n      }\r\n\r\n      setJobs(data || []);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-8\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-8\">Dostupni poslovi</h1>\r\n        \r\n        {loading ? (\r\n          <div className=\"text-center\">Učitavam...</div>\r\n        ) : (\r\n          <div className=\"grid gap-4\">\r\n            {jobs.map((job) => (\r\n              <div key={job.id} className=\"bg-white p-6 rounded-xl shadow-md\">\r\n                <div className=\"flex justify-between items-start mb-2\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-semibold text-gray-800\">{job.grad}</h2>\r\n                    <p className=\"text-gray-600\">{job.adresa}</p>\r\n                  </div>\r\n                  <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm\">\r\n                    {job.dnevnica} RSD/dan\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-gray-700 mb-4\">{job.opis}</p>\r\n                <div className=\"flex items-center text-sm text-gray-500\">\r\n                  <span className=\"mr-2\">Poslodavac:</span>\r\n                  <span className=\"font-medium\">{job.user_email}</span>\r\n                </div>\r\n                {/* Dodat prikaz broja telefona */}\r\n                <div className=\"flex items-center text-sm text-gray-500 mt-2\">\r\n                  <span className=\"mr-2\">Kontakt telefon:</span>\r\n                  <span className=\"font-medium\">{job.broj_telefona}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAgBe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM;gDAAY;oBAChB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,kHAAA,CAAA,UAAQ,CAAC,IAAI,CAAC,OAAO;oBACtD,IAAI,CAAC,MAAM;wBACT,OAAO,IAAI,CAAC;wBACZ;oBACF;oBAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,UAAQ,CACnC,IAAI,CAAC,QACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;wBAAE,WAAW;oBAAM;oBAE1C,IAAI,OAAO;wBACT,QAAQ,KAAK,CAAC,kCAAkC;wBAChD;oBACF;oBAEA,QAAQ,QAAQ,EAAE;oBAClB,WAAW;gBACb;;YAEA;QACF;6BAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAwC;;;;;;gBAErD,wBACC,6LAAC;oBAAI,WAAU;8BAAc;;;;;yCAE7B,6LAAC;oBAAI,WAAU;8BACZ,KAAK,GAAG,CAAC,CAAC,oBACT,6LAAC;4BAAiB,WAAU;;8CAC1B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;8DAAuC,IAAI,IAAI;;;;;;8DAC7D,6LAAC;oDAAE,WAAU;8DAAiB,IAAI,MAAM;;;;;;;;;;;;sDAE1C,6LAAC;4CAAK,WAAU;;gDACb,IAAI,QAAQ;gDAAC;;;;;;;;;;;;;8CAGlB,6LAAC;oCAAE,WAAU;8CAAsB,IAAI,IAAI;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAO;;;;;;sDACvB,6LAAC;4CAAK,WAAU;sDAAe,IAAI,UAAU;;;;;;;;;;;;8CAG/C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAO;;;;;;sDACvB,6LAAC;4CAAK,WAAU;sDAAe,IAAI,aAAa;;;;;;;;;;;;;2BAlB1C,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;AA2B9B;GAnEwB;;QACP,qIAAA,CAAA,YAAS;;;KADF"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}